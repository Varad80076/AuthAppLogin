const nodemailer = require('nodemailer');
require('dotenv').config();

 async  function otpmailsender(name,email,link, otp, emailType) {
  try {
    var transport = nodemailer.createTransport({
      host: process.env.EMAIL_HOST,
      port: process.env.EMAIL_PORT,
      secure: false,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    });

    const mailOption = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: emailType === "VERIFY" ? "OTP Verification" : "Reset Your Password",
      html:emailType === "VERIFY"
          ? `<div style="font-family: Arial, sans-serif; line-height: 1.4;">
              <h2>Verify Your Email Address</h2>
                <h4>Dear ${name},</h4>
                  <p>Your One-Time Password (OTP) for email verification is:</p>
                    <h3 style="color: #4CAF50;">${otp}</h3>
                      <p>This code is valid for 10 minutes. Please enter the code to verify your email address.</p>
                    <p>If you didn’t request this, you can safely ignore this email.</p>
                  <p>Best regards,</p>
                <p>Varad Badgujar</p>
            </div>`
          : `<div style="font-family: Arial, sans-serif; line-height: 1.4;">
              <h2>Reset Your Password</h2>
                  <h4>Dear ${name},</h4>
                      <p>We received a request to reset your password. Click the link below to reset it:</p>
                          <a href="${link}" 
                              style="color: #4CAF50; text-decoration: none; font-weight: bold;">
                                  Reset Password
                          </a>
                      <p>If you didn’t request a password reset, please ignore this email or contact our support team.
                        This link is valid for 20 min.</p>
                  <p>Best regards,</p>
                  <p>Varad Badgujar</p>
                  <p>If you didn’t request this, you can safely ignore this email.</p>
            </div>`,
    };

    const mailResponse = await transport.sendMail(mailOption);
    return mailResponse;
  } catch (error) {
    console.error("Error sending email:", error);
    throw error;
  }
}

module.exports = otpmailsender;
